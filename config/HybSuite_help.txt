################################################################################
                             INPUT REQUIREMENTS
################################################################################

[1] Essential inputs
--------------------------------------------------------------------------------
- Input list (specified by '-input_list'): The file listing input sample names and corresponding data types (Required).
- Input data (specified by '-input_data'): The directory containing all input data (Required when the list of your own data is provided). 
- Target file (specified by '-t'): Target file for HybPiper (Absolute path) (Required except for running only stage 1).
- Directory containing assembled data (specified by '-eas_dir') (Optional):
  - If you have a directory containing sequences of your samples assmebled by HybPiper, you can directly specify this directory, in order to save time for data assembly.
- Directory containing NGS data (specified by '-NGS_dir') (Optional):
  - If you have a directory containing downloaded and clean sequences of your samples, you can directly specify this directory, in order to save time for sequences downloading and adapters removal.

[2] Data format specifications
--------------------------------------------------------------------------------
Optional user-provided raw data and pre-assembled sequences (-input_data):
  - user-provided raw data:
    - Paired-end: <taxon>_1.fastq + <taxon>_2.fastq or <taxon>_1.fq.gz + <taxon>_2.fq.gz
    - Single-end: <taxon>.fastq or <taxon>.fq.gz
  - pre-assembled sequences:
    - Seqs of sample <taxon>: <taxon>.fasta

################################################################################
                              HYBSUITE USER MANUAL
################################################################################

[1] Command mode
--------------------------------------------------------------------------------
Command mode 1 (for conda version):
  hybsuite [subcommand] [options] ...

Command mode 2 (for local version):
  bash HybSuite.sh [subcommand] [options] ...

Subcommands for running HybSuite pipeline:
    -----------------------------------------------------------------------------
    full_pipeline       Run HybSuite full pipeline (from satge 1 to 4) in one go.
    -----------------------------------------------------------------------------
    stage1              Run HybSuite Stage 1: 'NGS dataset construction':
                        (1) download NGS raw reads from NCBI;
                        (2) integrate user-provided data;
                        (3) raw reads trimming via Trimmomatic;
    -----------------------------------------------------------------------------
    stage2              Run HybSuite Stage 2: 'Data assembly and filtering':
                        (1) data assembly and putative paralogs retrieval via HybPiper;
                        (2) integrate pre-assembled sequences (if provided);
                        (3) filter putative paralogs;
                        (4) plot original and filtered paralogs heatmap;
    -----------------------------------------------------------------------------
    stage3              Run HybSuite Stage 3: 'Paralogs handling',
                        optionally execute seven paralogs-handling methods (HRS, RLWP, LS, MO, MI, RT, 1to1):
                        HRS:
                        (1) retrieve seqeunces via command 'hybpiper retrieve_sequences' in HybPiper;
                        (2) integrate pre-assembled sequences (if provided);
                        (3) filter sequences by length to remove potential mis-assembled seqeunces;
                        (4) mutiple sequences aligning and trimming;
                        (5) filter trimmed alignments to generate final alignments.
                        RLWP: 
                        (1) retrieve seqeunces via 'hybpiper retrieve_sequences' via HybPiper;
                        (2) integrate pre-assembled sequences (if provided);
                        (3) filter sequences by length to remove potential mis-assembled seqeunces;
                        (4) remove loci with putative paralogs masked in more than <threshold> samples;
                        (5) mutiple sequences aligning and trimming;
                        (6) filter trimmed alignments to generate final alignments.
                        PhyloPypruner pipeline (LS, MI, MO, RT, 1to1):
                        (1) mutiple sequences aligning and trimming for all putative paralogs;
                        (2) gene trees inference of all putative paralogs;
                        (3) obtain orthogroup alignments using tree-based orthology inference algorithms via PhyloPypruner;
                        (4) realigning and trimming the orthogroup alignments;
                        (5) filtering trimmed orthogroup alignments to generate final alignments.
                        ParaGone pipeline (MI, MO, RT, 1to1):
                        (1) use the directory cantaining all putative paralogs generated in stage 2 as input;
                        (2) obtain orthogroup alignments using tree-based orthology inference algorithms via ParaGone;
                        (3) filter trimmed orthogroup alignments to generate final alignments.
    -----------------------------------------------------------------------------
    stage4              Run HybSuite Stage 4: 'Species tree inference'
                        Concatenated analysis:
                        (1) concatenate final alignments generated in stage 3 into the supermatrix;
                        (2) obtain the best evolution model for tree inference via ModelTest-NG or IQ-TREE (-m MFP);
                        (3) species tree inference optionally via IQ-TREE, RAxML, or RAxML-NG.
                        Coalescent analysis:
                        (1) single gene trees inference via IQ-TREE or FastTree;
                        (2) collapse weakly supported branches of gene trees;
                        (3) combine all gene trees together;
                        (4) run ASTRAL-IV or wASTRAL.
    -----------------------------------------------------------------------------
    retrieve_results    Retrieve final tree files and summarize results generated via different paralog-handling methods.
                        This must be ran after the completion of HybSuite full pipeline.
    -----------------------------------------------------------------------------

Subcommands for running HybSuite extension tools:
    -----------------------------------------------------------------------------
    filter_seqs_by_length | fsl 
                        Filter sequences by length (run filter_seqs_by_length.py).
    filter_seqs_by_coverage | fsc
                        Filter sequences by sample and locus coverage (run filter_seqs_by_sample_and_locus_coverage.py).
    plot_paralog_heatmap | pph 
                        Plot paralog heatmap (run plot_paralog_heatmap.py).
    rlwp                Remove loci with putative paralogs masked in more than <threshold> samples (run RLWP.py).
    fasta_formatter | ff
                        Format fasta files (run Fasta_formatter.py).
    rename_assembled_data | rad
                        Rename HybPiper assembled data directory (run rename_assembled_data.py).
    modified_phypartspiecharts | mpp
                        Visualize gene-species tree conflict (run modified_phypartspiecharts.py).
    -----------------------------------------------------------------------------

To view parameters and help for a subcommand, 
use e.g. "hybsuite full_pipeline --help", "hybsuite stage1 -h"

